# Generated by Django 4.2.7 on 2025-10-05 10:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('essential', 'Essential'), ('analytics', 'Analytics'), ('marketing', 'Marketing'), ('personalization', 'Personalization'), ('third_party', 'Third Party Sharing'), ('location', 'Location Data'), ('biometric', 'Biometric Data')], max_length=20)),
                ('description', models.TextField()),
                ('is_required', models.BooleanField(default=False)),
                ('retention_period_days', models.IntegerField(default=365, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3650)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consent_types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DataProcessingActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('legal_basis', models.CharField(choices=[('consent', 'Consent'), ('contract', 'Contract'), ('legal_obligation', 'Legal Obligation'), ('vital_interests', 'Vital Interests'), ('public_task', 'Public Task'), ('legitimate_interests', 'Legitimate Interests')], max_length=20)),
                ('data_categories', models.JSONField(default=list)),
                ('data_subjects', models.JSONField(default=list)),
                ('recipients', models.JSONField(default=list)),
                ('third_country_transfers', models.BooleanField(default=False)),
                ('retention_period', models.CharField(max_length=100)),
                ('security_measures', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'data_processing_activities',
                'ordering': ['activity_name'],
            },
        ),
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_type', models.CharField(choices=[('user_profile', 'User Profile'), ('contact_info', 'Contact Information'), ('location_data', 'Location Data'), ('payment_info', 'Payment Information'), ('usage_data', 'Usage Data'), ('communication_data', 'Communication Data'), ('biometric_data', 'Biometric Data')], max_length=20, unique=True)),
                ('retention_period_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3650)])),
                ('retention_basis', models.CharField(choices=[('legal_requirement', 'Legal Requirement'), ('business_necessity', 'Business Necessity'), ('user_consent', 'User Consent'), ('contract_performance', 'Contract Performance')], max_length=20)),
                ('description', models.TextField()),
                ('auto_delete', models.BooleanField(default=True)),
                ('requires_consent', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'data_retention_policies',
                'ordering': ['data_type'],
            },
        ),
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('allow_data_sharing', models.BooleanField(default=False)),
                ('allow_analytics', models.BooleanField(default=False)),
                ('allow_marketing', models.BooleanField(default=False)),
                ('allow_location_tracking', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('auto_delete_after_inactivity', models.BooleanField(default=False)),
                ('inactivity_period_days', models.IntegerField(default=365)),
                ('notify_on_data_access', models.BooleanField(default=True)),
                ('monthly_privacy_report', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_settings',
            },
        ),
        migrations.CreateModel(
            name='DataExportRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_types', models.JSONField(default=list)),
                ('format', models.CharField(default='json', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('ready', 'Ready for Download'), ('downloaded', 'Downloaded'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('download_url', models.URLField(blank=True)),
                ('expires_at', models.DateTimeField()),
                ('download_count', models.IntegerField(default=0)),
                ('max_downloads', models.IntegerField(default=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_export_requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='DataDeletionRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_type', models.CharField(choices=[('full_deletion', 'Full Account Deletion'), ('partial_deletion', 'Partial Data Deletion'), ('anonymization', 'Data Anonymization')], max_length=20)),
                ('data_types', models.JSONField(default=list)),
                ('reason', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('partially_completed', 'Partially Completed')], default='pending', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('completion_details', models.JSONField(default=dict)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_deletion_requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='UserConsent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('granted', 'Granted'), ('denied', 'Denied'), ('withdrawn', 'Withdrawn'), ('expired', 'Expired')], max_length=10)),
                ('granted_at', models.DateTimeField(blank=True, null=True)),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('consent_version', models.CharField(default='1.0', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='privacy.consenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_consents',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'consent_type')},
            },
        ),
        migrations.CreateModel(
            name='EncryptedPersonalData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('field_name', models.CharField(max_length=50)),
                ('encrypted_value', models.TextField()),
                ('data_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encrypted_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'encrypted_personal_data',
                'indexes': [models.Index(fields=['user', 'field_name'], name='encrypted_p_user_id_40843d_idx')],
                'unique_together': {('user', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='DataAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('read', 'Data Read'), ('write', 'Data Write'), ('delete', 'Data Delete'), ('export', 'Data Export'), ('anonymize', 'Data Anonymization')], max_length=15)),
                ('data_category', models.CharField(choices=[('personal_info', 'Personal Information'), ('contact_info', 'Contact Information'), ('location_data', 'Location Data'), ('payment_info', 'Payment Information'), ('usage_data', 'Usage Data'), ('biometric_data', 'Biometric Data')], max_length=20)),
                ('data_fields', models.JSONField(default=list)),
                ('purpose', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('retention_until', models.DateTimeField()),
                ('accessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_access_actions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_access_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='data_access_user_id_0233e0_idx'), models.Index(fields=['accessed_by', 'timestamp'], name='data_access_accesse_356800_idx'), models.Index(fields=['access_type', 'timestamp'], name='data_access_access__d0ec44_idx')],
            },
        ),
    ]
